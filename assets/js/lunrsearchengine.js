
var documents = [{
    "id": 0,
    "url": "/404.html",
    "title": "404",
    "body": "404 Page does not exist!Please use the search bar at the top or visit our homepage! "
    }, {
    "id": 1,
    "url": "/about",
    "title": "About",
    "body": "      This website was created as a collection of resources to help teach CAD and Design for FRC using Onshape      (although many concepts could apply to other software) on team 6328. We decided to open source the resources to help other      teams and encourage others to add to and improve the content.     Meet the Team:                                       Max WestwaterCD        Team: 6328/5254        The lead silver medalist.                                             Dave PowersCD        Team: 6328/1678        The lead milk consumer.                                             Jack TervayCD        Team: 6328        6328 Technical Mentor.                                                               Want to see yourself on the list?:     Head over to our contribute page to learn how to help us fix or add more content.       We're always looking for feedback.   "
    }, {
    "id": 2,
    "url": "/cad-library",
    "title": "CAD Library",
    "body": "      One of the great things about Onshape are the parts libraries and featurescripts created by the community.       This page is a list of some of the most useful ones we've found.           MKCad Onshape Library:       This library has a wide variety of COTs parts which can be easily imported into your assemblies. This is        a community created library and you can see its latest updates in the ChiefDelphi Thread. You        can find the different documents by searching for them in the public section of onshape or simply        clicking this          link.       To easily find these documents when it is time to insert them into your assemblies it is recommended to        tag them. This process is outlined in our getting started page.               Featurescripts:       Onshape has their own scripting language to create custom features to automate aspects of design called        Featurescripts. There are        also a lot of community generated scripts which are particularly useful to FRC.                               Learn how to install Featurescripts &raquo;                                                   Open any Onshape document and go inside of a part studio            Click the right most button on the toolbar ('Add custom features')                          Note: If you have previously added any Featurescripts one of those may show up as the                right most icon. In that case click the dropdown to show the add button.                         Paste the link of the Featurescript you're looking to add into the search bar (you can use              the 'Copy Link' button next to the below scripts')                              Note: Many of the below feature scripts are part of the same overall document so you                  can add multiple from the same link.                                       Select the given script you want. It is then accessible from the same drop down where you              added the feature.                                           Extrude Individual                                                      Made by Julia                                     Select a sketch and automatically create a new body for each section of the sketch. Useful for creating multiple tubes in one operation.                                 Learn how to use Extrude Individual                                                    Extrude Individual Link                    Copy Link                                      Tube Converter                                                      Made by Julia                                     Coverts a raw extrusion into a tube like is typically used in FRC with parameters for tube thickness and hole patterns.                                 Learn how to use Tube Converter                                                    Tube Converter Link                    Copy Link                                      Custom Length Extrusion                                                      Made by Ricky                                     Quickly generate custom lengths of a wide variety of extrusions.                                           Custom Length Extrusion Link                    Copy Link                                      FilletXpert                                                      Made by Julia                                     Fillet all edges touching a face in a certain direction. Based on Solidworks’ FilletXpert feature.                                           FilletXpert Link                    Copy Link                                      Shaft Generator                                                      Made by Julia                                     Quickly generate shafts with parameters for choosing shaft retention methods.                                 Learn how to use Shaft Generator                                                    Shaft Generator Link                    Copy Link                                      Spacer Generator                                                      Made by Julia                                     Quickly generate custom spacers.                                           Spacer Generator Link                    Copy Link                                      Gusset Generator                                                      Made by Julia                                     Generate gussets by simply selecting the holes which define the shape of the gusset.                                           Gusset Generator Link                    Copy Link                                      Lighten                                                            Lighten your parts easier with this featurescript and a sketch of the areas you want removed.                                 Learn how to use Lighten                                                    Lighten Link                    Copy Link                                      Plate Generator                                                      Made by Alex                                     Generate custom plates from nothing more than a few sketch points.                                           Plate Generator Link                    Copy Link                                      Belt Generator                                                      Made by Alex                                     Generate belts/pulleys between given center points.                                           Belt Generator Link                    Copy Link                                      Spur Gear Generator                                                      Made by Alex                                     Generate highly customizable spur, helical, and double helical gears.                                           Spur Gear Generator Link                    Copy Link                                      Isogrid Pattern                                                      Made by Julia                                     Adds an Isogrid pattern to parts.                                           Isogrid Pattern Link                    Copy Link                                      Motor Mount Hole Generator                                                      Made by Julia                                     Adds holes for motor mounting holes (and vents on 775 style motors).                                           Motor Mount Hole Generator Link                    Copy Link                                      Automated Part Numbering                                                      Made by Abhi                                     Automatically assign part numbers to your parts.                                           Automated Part Numbering Link                    Copy Link                                      Laser joint generator                                                            Adds slots for mounting two pieces of laser cut material together.                                 Learn how to use Laser joint generator                                                    Laser joint generator Link                    Copy Link                                      T-slot joint generator                                                            Adds slots and holes for mounting two pieces of laser cut material together with a bolt and nut.                                 Learn how to use T-slot joint generator                                                    T-slot joint generator Link                    Copy Link                                      Automatic part layout                                                            Automatically lays out parts on a flat surface for laser cutting or milling.                                           Automatic part layout Link                    Copy Link                                        General Featurescript Collection        List of various useful scripts which aren't FRC specific: Link                     Robot CAD Collection:         Robot CAD from previous years can be a great learning resource to look at how other teams solved old          challenges. Thankfully teams have compiled lists together to make it easy to find robots from          specific teams and years.                                                               Useful Links            Spectrum              CAD Collection                        The Compass Alliance Onshape Collection                                            Are We Missing Anything?      If we're missing any useful resources be sure to let us know so we can get it added.       Add to the CAD Library      "
    }, {
    "id": 3,
    "url": "/calculators",
    "title": "Calculators",
    "body": "      This is a collection of various mechanical calculators which are useful while designing. These can help with      determining gear ratios, gear center to centers, belt center to centers, chain lengths, and much more.           West Coast Products Calculators:                                     Gear Calculator            Used to determine the center distance between two gears of any given size. Can be done for              either main type of gear used in FRC (20DP &amp; 32DP).                                                 Belt Calculator            Used to determine center to center distance for given pulleys. This calculator will only              given you belt sizes which are sold by VexPro. Because belts come in specific sizes the              calculator will show you the two closest sizes to your desired center distance.                                                                                                                                                                                                       JVN Design Calculator:                                     JVN Calculator is a spreadsheet which helps with the design of robot mechanisms and              drivetrains. With this, you can find the speed of your drivetrain, the current draw from              motors, and design rotary and linear mechanisms.                                                                             ReCalc:                                     ReCalc is website with various mechanical calculators and references.               This calculator is web based and has sharable urls which make it very easy to save and share              configurations.                                                                             Spectrum Design Calculator:                                     The Spectrum design spreadsheet combines tons of useful resources together for calculating              pneumatics, mechanical systems (belts, chains, gears, etc. ), electrical, and much more. This              is a great spreadsheet to always have open while designing.                                                                             ILITE Drivetrain Simulator:                                     This spreadsheet provides a lot of advanced calculations for FRC drivetrains. You can use              this to optimize your gear ratios for specific travel distances and current draws.                                                                     "
    }, {
    "id": 4,
    "url": "/categories",
    "title": "Categories",
    "body": ""
    }, {
    "id": 5,
    "url": "/contribute",
    "title": "Contribute",
    "body": "We’re always looking for ways to improve the site, if you have any suggestions let us know! Suggesting Changes:  The easiest way to get ahold of us is to message one of us on ChiefDelphi. Reach out to Max or anyone else on the about page.  File an Issue on our GitHub page. Making the Change Yourself: This site is created using Jekyll, but a basic knowledge of html or markdown is all that is required for most changes. Head over to our GitHub page and feel free to open a Pull Request! If you’re interested in writing a blog post or other content but don’t want to mess with the site yourself feel free to send us any content and we can work on the formatting and integration. Blogs are written using Markdown. "
    }, {
    "id": 6,
    "url": "/external-resources",
    "title": "External Design Resources",
    "body": "      This is a collection of other resources created by external members of the community. Not all of them are      done in Onshape but still provide useful concepts which can be transferred between cad programs.           Official Onshape Webinars:       This is a great video series created by PTC (makers of Onshape) specifically for how to use their product        for FRC.                     RAMP Video Series:       RAMP is a series of videos created by Adam Heard on various cad concepts. The videos are split between        Solidworks and Onshape. You can checkout the YouTube channel here.               Nicholas Aarestad's Onshape Video Series:       This is a series of videos focusing on Onshape which cover a lot of important concepts in FRC. You can        checkout the YouTube playlist here and the        ChiefDelphi post here.                     Simbot Solidworks Series:       This is a series of videos focusing on Solidworks. While they are in solidworks some of the concepts        translate over to Onshape pretty well. Starting with video 26 (ep 6. 1) they cover more general topics        after teaching how to use Solidworks. You can checkout the YouTube playlist here.                         Want to contribute yourself?      You can submit either blog posts or external content to add to the resource library.       Contribute      "
    }, {
    "id": 7,
    "url": "/getting-started",
    "title": "Getting Started",
    "body": "      This page is designed to walk you through getting started with Onshape. It will cover creating your account,      linked the helpful parts libraries, and following the basic tutorials.           Creating Your Account:               Navigate to onshape. com/education-plan        Fill in the information on this page and click 'Create EDU Account'        Fill in the information for your school and agree to the terms then click 'Create Account'                  You can simply put 'FIRST Robotics' for what you plan to use Onshape for                Check the email you used to sign up in the earlier step        Open the Onshape account activation email and click the link to activate your account        You will be sent to a page where you can now create your username and password        Optional: Join the Onshape Team for your FRC Team                  If you have an Onshape team you will need to contact whoever has access on your team with the            email you used to sign up for Onshape so you can be added.           Don't have a team? You can lean how to set one up here.                             Linking MKCad Parts Library:       To get easy access to the COTS parts library when it is time to use them it is best to tag all of the        documents you will be using. This can be slighly confusing because there are so many copies of the        library. This section will walk you though how to do that.               Do a public search in Onshape by clicking this            link.         Click the label icon in the top right (next to the trash can) and then in the drop down click          'Create New Label'. Call it 'MKCad'        Next you will add all documents from this search to the label by right clicking on the document,          clicking 'Labels. . . ', then adding to the newly created MKCad label            You should now see the label with all the documents on the left side of navigation below the create        button.               Adding Useful Featurescripts:       Featurescripts are community created custom functions to automate portions of the design process. To        learn more about what they can do visit our page on them.               Open any Onshape document and go inside of a part studio        Click the right most button on the toolbar ('Add custom features')        Paste the link of the document you're looking to add from into the search bar and then select the          individual scripts to add. Add the following scripts from their respective link. (these are only our          recommendation, we will try to keep this list updated when new ones are released)                      Julia's Featurescripts                          Extrude Individual              Tube Converter              FilletXpert              Shaft Generator              Spacer Generator              Gusset Generator              Isogrid Pattern              Motor Mounting                        FeatureScript Lighten            FRC Belt Calculator            Useful scripts for laser cutting                          Laser Joint              T-Slot Joint              Automatic Layout                                                  Complete Onshape Learning Pathway Tutorials:       Onshape has a lot of useful curriculum to help you learn about the software on their website. We recommend completing the        following tutorials to get a good understanding of the basic concepts of OnShape.               Introduction to Parametric Feature-Based CAD        Navigating Onshape        Sketching                Part Design Using Part Studios        Multi-Part Part Studios        Onshape            Assemblies        Detailed            Drawings        Document Management        Importing and Exporting Data                          Any feedback?      Did you struggle with any parts of this guide? Anything to add? We'd love to hear it to we can improve        the content.       Give Feedback      "
    }, {
    "id": 8,
    "url": "/",
    "title": "Home",
    "body": "      About Us:     This site was created by a group of 6328 mentors to serve as a collection of resources to help teach CAD and      design concepts to our students while in the process of transitioning fully to Onshape. It is being used      internally on the team but we decided to make the      resources public to help the community in the spirit of the #OpenAlliance. If you have feedback or would      like to contribute to the site please reach out to us.             Getting Started:     New to Onshape? Trying to get everything set up correctly? Wondering what tutorials and exercises to do to      get started? Visit our getting started page to walk though all the steps to start learning Onshape.     Start Learning        Resources:                       Calculators:         Useful mechanical calculators to help with design.                                               CAD Library:         COTs components and custom scripts to use in Onshape.                                               External Resources:         Content from other sources to help teach design.                                             Blog:     Check out these few featured blog posts, be sure to check out the full blog here.                                                                                                                                                                                                           Using the Shaft Generator Featurescript                              :               The shaft generator featurescript does exactly what the name implies - automatically generates any and all shaft types you’ll need in FRC. Gone are the. . . :                                                                                                                                                                               Jack Tervay                                    01 Oct 2020                                                                                                                                                                                                                                                                                                                  Using the Lighten Featurescript                              :               The lighten script is yet another powerful tool you can use to cut down on the time spent per part. Additionally, it drastically reduces the. . . :                                                                                                                                                                               Jack Tervay                                    01 Oct 2020                                                                                                                                                                                                                                                                                                                  Using the Extrude Individual Featurescript                              :               Extrude Individual creates a new body for each selected section of a sketch, allowing the user to quickly create multiple parts in a single operation. . . . :                                                                                                                                                                               Jack Tervay                                    01 Oct 2020                                                                                                                                                                                                                                                                                                                          Using the TubeConverter Featurescript                              :               This blog will walk you though using one of the most powerful featurescripts, the TubeConverter. This script is a real game changer for how quickly. . . :                                                                                                                                                                               Max Westwater                                    29 Jul 2020                                                                                                                                                                                                                                                                                                                  Welcome to Onshape4FRC                              :               Welcome to our new blog. During the process of switching over from Solidworks to Onshape 6328 had to create various materials for teaching our students. . . :                                                                                                                                                                               Max Westwater                                    26 Jul 2020                                                                                                                  "
    }, {
    "id": 9,
    "url": "/blog/",
    "title": "Blog",
    "body": "      Featured:                                                                                                                                                                                                           Using the Shaft Generator Featurescript                              :               The shaft generator featurescript does exactly what the name implies - automatically generates any and all shaft types you’ll need in FRC. Gone are the. . . :                                                                                                                                                                               Jack Tervay                                    01 Oct 2020                                                                                                                                                                                                                                                                                                                  Using the Lighten Featurescript                              :               The lighten script is yet another powerful tool you can use to cut down on the time spent per part. Additionally, it drastically reduces the. . . :                                                                                                                                                                               Jack Tervay                                    01 Oct 2020                                                                                                                                                                                                                                                                                                                  Using the Extrude Individual Featurescript                              :               Extrude Individual creates a new body for each selected section of a sketch, allowing the user to quickly create multiple parts in a single operation. . . . :                                                                                                                                                                               Jack Tervay                                    01 Oct 2020                                                                                                                                                                                                                                                                                                                          Using the TubeConverter Featurescript                              :               This blog will walk you though using one of the most powerful featurescripts, the TubeConverter. This script is a real game changer for how quickly. . . :                                                                                                                                                                               Max Westwater                                    29 Jul 2020                                                                                                                                                                                                                                                                                                                  Welcome to Onshape4FRC                              :               Welcome to our new blog. During the process of switching over from Solidworks to Onshape 6328 had to create various materials for teaching our students. . . :                                                                                                                                                                               Max Westwater                                    26 Jul 2020                                                                                                                        All Stories:                                                                                             Using the Shaft Generator Featurescript              :       The shaft generator featurescript does exactly what the name implies - automatically generates any and all shaft types you’ll need in FRC. Gone are the days of spending time repeatedly. . . :                                                                                       Jack Tervay                    01 Oct 2020                                                                                                                            Using the Lighten Featurescript              :       The lighten script is yet another powerful tool you can use to cut down on the time spent per part. Additionally, it drastically reduces the amount of manual work required. . . :                                                                                       Jack Tervay                    01 Oct 2020                                                                                                                            Using the Extrude Individual Featurescript              :       Extrude Individual creates a new body for each selected section of a sketch, allowing the user to quickly create multiple parts in a single operation. This script is particularly useful. . . :                                                                                       Jack Tervay                    01 Oct 2020                                                                                                                            Using the TubeConverter Featurescript              :       This blog will walk you though using one of the most powerful featurescripts, the TubeConverter. This script is a real game changer for how quickly you can design parts, especially. . . :                                                                                       Max Westwater                    29 Jul 2020                                                                                                                            Welcome to Onshape4FRC              :       Welcome to our new blog. During the process of switching over from Solidworks to Onshape 6328 had to create various materials for teaching our students (and some mentors). In doing. . . :                                                                                       Max Westwater                    26 Jul 2020                                                                        Explore →:                                       Onshape        (5)            Announcements        (1)            Featurescripts        (4)            Design        (1)                        "
    }, {
    "id": 10,
    "url": "/privacy",
    "title": "Privacy",
    "body": "      This website utilizes Google Analytics to collect basic traffic information.     Analytics:     This information is used by the team to understand how many visitors there are and potential ways to improve the site in the future.       Generalized information about total users, page views, and broad state based demographic information may be included in award submissions as a part of the       FIRST Robotics Competition and published. There is no way to track a specific user and all data is anonymized. Any information about specific entities using      the site which are published is gained through direct contact and permission and not any analytic information.          Disclaimer:     This site has no official officiation with Onshape, FIRST, or any other corporate entity. It is published as a purely educational resource.   "
    }, {
    "id": 11,
    "url": "/robots.txt",
    "title": "",
    "body": "      Sitemap: {{ “sitemap. xml”   absolute_url }}   "
    }, {
    "id": 12,
    "url": "/blog/using-shaft-generator/",
    "title": "Using the Shaft Generator Featurescript",
    "body": "2020/10/01 - The shaft generator featurescript does exactly what the name implies - automatically generates any and all shaft types you’ll need in FRC. Gone are the days of spending time repeatedly sketching boring hex shafts. Simply launch the shaft generator and select the desired origin of the shaft. From here you have the option to select an end face or simply enter the length of the shaft. Select your preferred retention type and voila - you have yourself a generated shaft.       Generated Hex Shaft      This featurescript saves lots of time and saves you from some pretty uninteresting CAD work. Additionally, it reduces the amount of features in your feature tree, making it easier to both navigate and to modify. Shout out to Julia on ChiefDelphi for sharing this (and many more) featurescript. "
    }, {
    "id": 13,
    "url": "/blog/using-lighten/",
    "title": "Using the Lighten Featurescript",
    "body": "2020/10/01 - The lighten script is yet another powerful tool you can use to cut down on the time spent per part. Additionally, it drastically reduces the amount of manual work required to nicely lighten/pocket a part. Simply create a new sketch on a part, connect your load points with lines, and then use this script on the resulting sketch regions. Set your tool radius, wall thickness, and cut depth, and it pockets it for you!       Lightening a Plate      I find that having the Trim faces with part option selected usually results in more desirable pocketing, though it is often a case-by-case basis. If you run into issues with this script breaking after a change, or the script not liking your selections, I recommend removing your Faces to remove selections using the x and then reselecting the faces. Sometimes you’re able to notice which sketch region is breaking the script, and other times it seems to fix itself. This featurescript has the possibility to dramatically speed up your workflow if used appropriately1. The way the script is set up makes it super easy to quickly change the thickness of your walls or radius of your tool if later deemed necessary. Shout out to Julia on ChiefDelphi for sharing this (and many more) featurescript.       Despite this script doing most of the work for you, you still need to know how your part interacts with forces around it. Simply using this script and hoping it doesn’t over-lighten it is not a good mindset to have.  &#8617;    "
    }, {
    "id": 14,
    "url": "/blog/using-extrude-individual/",
    "title": "Using the Extrude Individual Featurescript",
    "body": "2020/10/01 - Extrude Individual creates a new body for each selected section of a sketch, allowing the user to quickly create multiple parts in a single operation. This script is particularly useful if you need multiple tubes of the same height, like a drivetrain or elevator. Simply create a sketch and use the script to select the desired unique sketch regions. A new part will be created for each selected section of the sketch.       Creating 4 Tubes in 1 Feature      This featurescript has the potential to seriously speed up your workflow if used appropriately. Furthermore, it can vastly reduce the amount of features in your feature tree, making it easier to both navigate and to modify. Shout out to Julia on ChiefDelphi for sharing this (and many more) featurescript. "
    }, {
    "id": 15,
    "url": "/blog/reducing-robot-weight/",
    "title": "Reducing Robot Weight - Best Practices & Strategies",
    "body": "2020/09/30 - A point of particular importance within the FRC space is the challenge to build within the weight limit. Despite FRC being around for more than 20 years, there is still a continual struggle with designing and building robots to be less than the designated weight limit (recently, 125 lbs). There have been numerous discussions on the topic of reducing robot weight, resulting in hundreds of different practices and strategies used by teams around the world. This blog aims to consolidate these best practices and strategies into a single document.  Design Considerations     Plan a Weight Budget From the Start   Monitor The Weight As You Go   Mechanism Compliance   Mechanisms That Do More Than One Job   Does This Have Functionality?    Motors &amp; Power Transmission     Brushless Motors   Evaluate Motor Selection   Use A Lighter Transmission Method    Drivetrain     Be Careful Not To Skimp On Your Drivetrain   Be Mindful of Weight Distribution    Pocketing     “Scallop” The Edges of Plates    Fasteners     Use Smaller Fasteners   Use Rivets   Avoid Aluminum Fasteners    Accurate CAD Weights     Have A Complete &amp; Accurate CAD Library   Assign Materials    Smaller is Better     Make Your Robot As Small As Possible   Smallest Possible Wheels, Gears, Belts, and More    Gears &amp; Pulleys     Aluminum vs. Steel Gears Depends on Application   Use Pocketed Gears   3D Print Your Pulleys   Reduce Infill on 3D Printed Parts If Possible    Pneumatics     Do You Need A Pneumatics System?   Use Aluminum Fittings Instead of Brass   Use An Appropriately Sized Manifold   Use Smaller Tubing   Smaller Regulators    Plastics     Does That Part Need to be Metal?   Low Load Plastics Can Be Very Thin    Shafts &amp; Intakes     Consider the Necessary Size of Your Hex Axles   Optimize Your Intake Hardware   Utilize Bushings In Place Of Bearings    Tube Wall Thicknesses     Use 1/16” Wall Instead of ⅛” Wall    Electrical     Try to keep the battery, main breaker, and PDP close to each other.     Weighing In Credits Missing Something?Design Considerations: Plan a Weight Budget From the Start: Right from the beginning, your team should discuss and create a weight budget for your robot - X pounds for the drivetrain, X pounds for this sub-system, so on and so forth (including your control system!). When doing this, give yourself an allowance of 5-10 pounds as weight seems to sneak out of nowhere sometimes. Monitor The Weight As You Go: As you progress through the design and build process, continue to think about lightness at every step and weigh as you go. If you only realize you’re overweight once your robot is assembled, it’s often too late to make any meaningful changes. Mechanism Compliance: Does this mechanism need to be rigid or can it compliantly bend when it hits something? If applicable, make your mechanisms flex more by having more compliance (polycarbonate). Energy is force times distance so if you can increase the distance your part deforms, you resultantly decrease the force the part must withstand from an impact. Oftentimes compliant mechanisms end up being lighter than very rigid mechanisms due to material selection. Mechanisms That Do More Than One Job: If your team is capable of something like this, think about designing a mechanism to do more than one task - a lot of this time this ends up saving some weight. Examples of multitasking mechanisms include elevators doubling as climbers in 2018 (254) as well as intake climbers in 2019 (2056). Does This Have Functionality?: Reduce or completely eliminate things on your robot that don’t have a competitive function. Some expectations to this point are things like sponsor stickers or powdercoat (because who doesn’t like to look good?). Motors &amp; Power Transmission: Brushless Motors: If your team can afford them, use them wherever possible. By switching a CIM with a NEO you save 1. 85 pounds - that’s enough to make or break an important mechanism. Evaluate Motor Selection: It doesn’t matter if you choose to use a lightweight motor if you end up needing a heavy gearbox. Typically, the less reduction required the better. Use A Lighter Transmission Method: Instead of using a fairly hefty 3:1 VersaPlanetary, you could probably save quite a bit of weight by simply using a 3:1 belt reduction from the motor to the output. Drivetrain: Be Careful Not To Skimp On Your Drivetrain: If there was a place to lighten the least, it would be your drivetrain. Arguably the most important mechanism on your robot, you really want to ensure that your drivetrain can hold up under a competition setting. With that being said, teams have had success using 1/16” wall tubing for their front and back rails. I would say this decision varies from game to game; if it’s a game where defense is relentless (2019) and you’re going to be receiving a lot of that, maybe it’s best to stick to ⅛” wall. Be Mindful of Weight Distribution: In addition to creating a robust drivetrain, you should also be thinking about the weight distribution of your robot. A lot of weight above the drivetrain with very little weight on the drivetrain is a surefire way to tip mid match. A top heavy robot with a fragile chassis is often an inadvertent oversight so it’s best to be thinking about this throughout the design process. Pocketing: “Scallop” The Edges of Plates: By removing unnecessary attachment points between plates and what it’s providing rigidity to, you can end up saving quite a bit of weight. Be mindful when doing this however - assess where material can be removed and how much can be removed (this comes with experience as well). Between the removal of material and the reduced amount of fasteners needed to attach the plate, this is a win-win if done correctly.       Code Orange Pocketing      Fasteners: Use Smaller Fasteners: Where you can, use smaller fasteners. Using 10-32 bolts instead of ¼-20 bolts in numerous places will end up freeing up some weight. Use Rivets: Aluminum rivets instead of bolts in low-load connections saves, surprisingly, plenty of weight. Avoid Aluminum Fasteners: Aluminum threaded fasteners are probably better left off of robots, as they’re easy to over-torque and break. If you do need them for whatever reason, use them for only large hardware with coarse threads and handle them with care. Accurate CAD Weights: Have A Complete &amp; Accurate CAD Library: Besides being a great organizational habit and time saver, a complete and accurate CAD library with correct weights will make your designers’ job a whole lot easier. Not having to manually enter the weights of COTS parts or simply guessing the weight of a mechanism can effectively guide your design team into making better, more informed decisions. Some already existing CAD libraries include Spectrum’s CAD Library and MKCad for Onshape. Assign Materials: In addition to a complete CAD library, it is highly recommended to put forth effort in assigning materials to all of your parts (plates, tubes, etc. ). Your drivetrain CAD weight won’t be accurate if your tubes and plates aren’t assigned to a proper aluminum material. With all that said, leave yourself a buffer - a 125 pound robot in CAD will not weigh 125 pounds in real life, no matter how accurate your CAD weights are. Smaller is Better: Make Your Robot As Small As Possible: As a consequence of the square-cube law, shaving off even a couple of inches from your frame perimeter can make a world of difference in the long run. This isn’t to say that you should sacrifice mechanisms because you’ve set the length and width of your robot too small from the get-go - don’t do this. Smallest Possible Wheels, Gears, Belts, and More: Using 6” wheels when you can instead use 3-4” wheels is a bigger waste of weight than most may realize. Smaller wheels are not only lighter, but they also require less of a gear reduction for the same effective robot speed. The combination of six to eight lighter wheels and a lighter reduction makes a big difference in robot weight. This principle applies to numerous other types of hardware, including gears. If you need a 2:1 gear reduction, don’t use a 40t gear and an 80t gear unless it’s necessary. This sounds obvious, yet I’ve had plenty of firsthand experiences with silly mistakes like this. Gears &amp; Pulleys: Aluminum vs. Steel Gears Depends on Application: Using aluminum gears instead of steel gears is an acceptable practice in many applications and saves a large amount of weight. However, it is highly, highly recommended NOT to use aluminum gears in drivetrain assemblies. Additionally, I recommend, as a team, deciding what tooth count gears are acceptable for aluminum and which are not (example: aluminum gears above 24t, steel gears below 24t). Use Pocketed Gears: Whether it be spending the extra $3 on WCP or doing it yourself, use pocketed gears when possible. Pocketed gears can save quite a lot of weight, especially when you get into the high tooth count gears. 971’s 2016 robot saved about 2 pounds by lightening their gears. 3D Print Your Pulleys: In many cases you are able to use your own 3D printed pulleys. In addition to the weight and money savings, printed pulleys result in a lot more freedom design-wise. Integrating designs and creative uses often become a great deal easier with your own printed pulleys. Reduce Infill on 3D Printed Parts If Possible: This one isn’t likely to save a whole lot of pounds but is still an important consideration when printing parts. The number of walls you have will generally have a greater impact on part strength than infill will - for more information, check out Markforged’s Article: 3D Printing Settings Impacting Part Strength. Pneumatics: Do You Need A Pneumatics System?: Discarding pneumatics completely is a bold but often redeeming move. Getting rid of pneumatic systems drastically reduces weight, however sometimes a well positioned piston can accomplish things lighter and better than motors. Ultimately, this decision will vary from team to team - some use pneumatics galore while others rarely do. Use Aluminum Fittings Instead of Brass: Wherever possible, use aluminum fittings instead of brass. Use An Appropriately Sized Manifold: Using an unnecessarily large manifold is a silly yet common mistake that can cost you a fair amount of weight. If you know you need 2 cylinders, perhaps acquire a 3 port base; a one port buffer is good for later (expected or unexpected) additions. Use Smaller Tubing: In some applications, give some thought to using smaller pneumatic tubing. Smaller fittings and tubing provides a nonzero weight reduction, especially if you end up having long tube runs (which is often the case). Smaller Regulators: Try to avoid using the huge pressure gauges and inline pressure regulators that the KOP comes with. Automation Direct has smaller and lighter push-to-connect variants available here. Plastics: Does That Part Need to be Metal?: A lot of people would be stunned at how much polycarbonate is used on a lot of great robots. Not everything needs to be metal and, in fact, polycarbonate works better than aluminum plates in many applications. Specifically if your mechanism needs to survive hits, it is much easier to build the mechanism to simply bend out of the way with polycarbonate than it is to build the mechanism to survive without yielding with aluminum. Low Load Plastics Can Be Very Thin: For robots with large surface areas of low load plastic sheets, switch to thinner plastic. For example, WCP’s 1/32” polycarbonate is great for things like sponsor panels and hopper walls. Shafts &amp; Intakes: Consider the Necessary Size of Your Hex Axles: Does that hex shaft really need to be . 5”, or can you instead use . 375” hex? Often people &amp; teams get into the habit of defaulting every hex shaft to . 5” when in reality . 375” would work in many circumstances. Optimize Your Intake Hardware: Intakes often span the width of your robot, resulting in some pretty long axles and rollers. To further the above point on the size of your shafts - also evaluate the lengths. If constructing an intake out of round tube rollers, use hubs or a dead axle at the ends of the roller to get rid of the unused middle portion of the hex shaft. If the intake allows for it, use smaller and thinner roller tubes; same thing with wheels - if possible, use smaller and fewer wheels. Utilize Bushings In Place Of Bearings: Use bushings instead of bearings in low rotary points as they are typically lighter and smaller than bearings. Use case examples include intake pivots and one time use mechanisms. Tube Wall Thicknesses: Use 1/16” Wall Instead of ⅛” Wall: Many people and teams have this preconceived notion that 1/16” wall tubing is rarely applicable because it’s too thin and that ⅛” wall is simply just better. In reality, ⅛” wall is necessary for only a small portion of FRC applications; this includes, but is not limited to, superstructures and drivetrains (even some capable teams’ drivetrains are 1/16” wall tubing today). To compare the strength and weight savings of 1/16” vs ⅛” wall tubing, see the below FEA analysis done by @JamesCH95.            ⅛” walled tube with the same linear density (weight per unit length) as a 1/16” walled tube. The 1/16” wall tube was substantially stronger because it is not riddled with stress concentrators. Something like 2-4x as strong.     Additionally, thinner walled tubing is generally cheaper and the cost is certainly lower since you don’t need to machine it a lot like you might with ⅛” wall. ⅛” wall tubing still does have its uses however. It is advantageous to use ⅛” wall if you need to clamp or tap the tube wall for a bolt. Furthermore, you don’t need to be as nervous about crushing ⅛” wall when bolting through it. Electrical: Try to keep the battery, main breaker, and PDP close to each other. : This reduces the length of large gauge wire that needs to travel between these components. Wire weight is nontrivial and adds up quickly - try to minimize the length of your wire runs, especially for larger gauge wire. Keeping wires runs short is also just a generally good practice, as transmitted power diminishes over distance. Weighing In: As obvious as it sounds - make sure to remove your battery and bumpers from your robot before you weigh it. I’ve experienced this last minute “we’re over the weight limit” panic a couple of times - and a nonzero amount of these occurrences can be attributed to this silly mistake. Credits: The majority of the content in this post is from the discussion on this ChiefDelphi thread and what I could think of. Thank you to everyone who contributed to this insightful conversation - many of you delivered your two cents better than I could’ve (that’s why you might notice almost a direct ctrl-c ctrl-v of your comment!). Missing Something?: If I forgot to mention something that you think would fit well into this blog, please don’t hesitate to contact me - this goes for any mistakes you think I may have made! "
    }, {
    "id": 16,
    "url": "/blog/using-tube-converter/",
    "title": "Using the TubeConverter Featurescript",
    "body": "2020/07/29 - This blog will walk you though using one of the most powerful featurescripts, the TubeConverter. This script is a real game changer for how quickly you can design parts, especially if you use a common hole pattern on your box tubing. Simply extrude the outer dimensions of your tube then use this script to shell out the internals and add in any common hole patterns. There are configurations for many important parameters like wall thickness and what kind of hole pattern you want. There are a few major types of hole pattern which are named for either the VexPro versaframe system or patterns used by teams. Two examples of slightly different patterns are shown below. Each one also has the option to add in a center row of holes.       1678 Pattern            4414/1323/973 Pattern      The user can also configure the hole size and offsets from one of the sides if you don’t want it to be centered by default. It is also possible to exclude certain faces from the hole pattern if needed. This featurescript has the possibility to speed up your workflow significantly if used right. It is also nice as it combines many operations into one feature to keep your feature bar clear and easier to see when you have to come back to modify something. This workflow is most powerful when you use a standardized build system with a precut pattern across most of your parts. Shout out to Julia on ChiefDelphi for sharing this (and many more) featurescript. "
    }, {
    "id": 17,
    "url": "/blog/welcome/",
    "title": "Welcome to Onshape4FRC",
    "body": "2020/07/26 - Welcome to our new blog. During the process of switching over from Solidworks to Onshape 6328 had to create various materials for teaching our students (and some mentors). In doing this we realized there are tons of resources out there but they can sometimes be hard to find. This website aims to address those issues and give teams starting out with or teaching new members in Onshape a place to start. The getting started page walks though the process which can be useful for people creating a new account. When using Onshape there are a lot of useful parts libraries and automated features, but they require some setup. This page has instructions to follow to link our recommended libraries to your account. Onshape also has various tutorials to help people new to CAD or Onshape in general. The last part of this page lists off some of the most important ones to learn the basics. The cad library page walks you through a lot of the things you linked in the getting started step. MKCad is a library of COTS parts which make assemblies with off the shelf components very easy. After linking the documents you can take advantage of updates with new parts due to the huge community support. Featurescripts also provide a lot of very useful custom features which can speed up and simplify the process of cadding for FRC. External resources is a collection of tutorial series created by other community members. These videos are a great resource for more advanced design concepts after you learn the basics of using a cad program. We’re always looking for more great examples to add to this page. The last main section is this blog. The blog posts will cover various topics focusing on teaching different methods and techniques for designing in FRC. This will be a growing resource as we find more concepts to cover in the process of our training. We hope you find this website useful. If you have any feedback or used any of these materials with your team we’d love to hear from you! -Max Enjoy our favorite video: "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>No results found...</li>";
        }
    }
    return false;
}

function lunr_search(term) {
    $('#lunrsearchresults').show( 400 );
    $( "body" ).addClass( "modal-open" );
    
    document.getElementById('lunrsearchresults').innerHTML = '<div id="resultsmodal" class="modal fade show d-block"  tabindex="-1" role="dialog" aria-labelledby="resultsmodal"> <div class="modal-dialog shadow-lg" role="document"> <div class="modal-content"> <div class="modal-header" id="modtit"> <button type="button" class="close" id="btnx" data-dismiss="modal" aria-label="Close"> &times; </button> </div> <div class="modal-body"> <ul class="mb-0"> </ul>    </div> <div class="modal-footer"><button id="btnx" type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Close</button></div></div> </div></div>';
    if(term) {
        document.getElementById('modtit').innerHTML = "<h5 class='modal-title'>Search results for '" + term + "'</h5>" + document.getElementById('modtit').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><small><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></small></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>Sorry, no results found. Close & try a different search!</li>";
        }
    }
    return false;
}
    
$(function() {
    $("#lunrsearchresults").on('click', '#btnx', function () {
        $('#lunrsearchresults').hide( 5 );
        $( "body" ).removeClass( "modal-open" );
    });
});